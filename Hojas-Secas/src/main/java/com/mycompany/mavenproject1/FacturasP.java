/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author maxto3161
 */
public class FacturasP extends javax.swing.JFrame {

    private JTable invoicesTable;
    private JButton viewDetailsButton, payButton, downloadPDFButton;
    private JTextField filterField;

    /**
     * Creates new form FacturasP
     */
    public FacturasP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        setTitle("Facturas");
        setSize(700, 500);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new BorderLayout());

        // Panel de filtro
        JPanel filterPanel = new JPanel();
        filterPanel.add(new JLabel("Filtrar por:"));
        filterField = new JTextField(20);
        filterPanel.add(filterField);
        JButton filterButton = new JButton("Filtrar");
        filterPanel.add(filterButton);
        getContentPane().add(filterPanel, BorderLayout.NORTH);

        // Crear tabla de facturas
        String[] columnNames = {"Número de Factura", "Fecha de Emisión", "Total a Pagar", "Estado de Pago"};
        Object[][] data = {
            {"INV-001", "2023-09-15", "$200", "Pendiente"},
            {"INV-002", "2023-08-15", "$200", "Pagado"}
        };
        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        invoicesTable = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(invoicesTable);
        getContentPane().add(scrollPane, BorderLayout.CENTER);

        // Panel de botones
        JPanel buttonPanel = new JPanel();
        viewDetailsButton = new JButton("Ver Detalles");
        payButton = new JButton("Pagar Factura");
        downloadPDFButton = new JButton("Descargar PDF");
        buttonPanel.add(viewDetailsButton);
        buttonPanel.add(payButton);
        buttonPanel.add(downloadPDFButton);
        getContentPane().add(buttonPanel, BorderLayout.SOUTH);

        viewDetailsButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int selectedRow = invoicesTable.getSelectedRow();
                if (selectedRow != -1) {
                    String invoiceNumber = (String) invoicesTable.getValueAt(selectedRow, 0);
                    String amount = (String) invoicesTable.getValueAt(selectedRow, 2);
                    JOptionPane.showMessageDialog(FacturasP.this,
                        "Detalles de la factura:\n" +
                        "Número de Factura: " + invoiceNumber +
                        "\nMonto: " + amount);
                } else {
                    JOptionPane.showMessageDialog(FacturasP.this, "Por favor, seleccione una factura.");
                }
            }
        });

        payButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int selectedRow = invoicesTable.getSelectedRow();
                if (selectedRow != -1) {
                    String status = (String) invoicesTable.getValueAt(selectedRow, 3);
                    if ("Pendiente".equals(status)) {
                        invoicesTable.setValueAt("Pagado", selectedRow, 3);
                        JOptionPane.showMessageDialog(FacturasP.this, "Pago procesado exitosamente.");
                    } else {
                        JOptionPane.showMessageDialog(FacturasP.this, "Esta factura ya ha sido pagada.");
                    }
                } else {
                    JOptionPane.showMessageDialog(FacturasP.this, "Por favor, seleccione una factura para pagar.");
                }
            }
        });

        downloadPDFButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int selectedRow = invoicesTable.getSelectedRow();
                if (selectedRow != -1) {
                    String invoiceNumber = (String) invoicesTable.getValueAt(selectedRow, 0);
                    JOptionPane.showMessageDialog(FacturasP.this, "Descargando PDF de la factura " + invoiceNumber);
                } else {
                    JOptionPane.showMessageDialog(FacturasP.this, "Por favor, seleccione una factura para descargar.");
                }
            }
        });

        filterButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String filterText = filterField.getText().toLowerCase();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) invoicesTable.getModel());
                invoicesTable.setRowSorter(sorter);
                if (filterText.length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    try {
                        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + filterText));
                    } catch (java.util.regex.PatternSyntaxException pse) {
                        JOptionPane.showMessageDialog(FacturasP.this, "Patrón de búsqueda inválido", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        });

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacturasP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacturasP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacturasP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacturasP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new FacturasP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
